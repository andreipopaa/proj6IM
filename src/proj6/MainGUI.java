package proj6;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;

public class MainGUI extends javax.swing.JDialog {
    private Socket sock;
    private String friendList[];
    private String friends;
    private PrintWriter pout;
    private BufferedReader in;
    //this is to store who this user is to help with cedartalk 
    private String myUsername;
    DefaultListModel dlm;
    /**
     * Creates new form MainGUI
     * @param parent
     * @param modal
     * @param sock
     * @param friends
     * @param user
     */
    public MainGUI(java.awt.Frame parent, boolean modal, String friends, String user) {
        super(parent, modal);
        initComponents();
        this.friends = friends;
        this.myUsername = user;
        dlm = new DefaultListModel();
        initFL(); 
        initSocket();
    }
    
    private void initSocket()
    {
        try 
        {
            int port = 4220;
            String host = "127.0.0.1";
            sock = new Socket(host, port);
            in = new BufferedReader(new InputStreamReader(sock.getInputStream()));
            pout = new PrintWriter(sock.getOutputStream(), true);
        }
        catch (IOException ioe)
        {
            System.err.println(ioe);
        }
    }
    
    private void initFL() 
    {
        initializeFL();
        createFriendList();
        updateFriends();
    }
    
    private void initializeFL () 
    {
        int size = 0; 
        StringTokenizer st = new StringTokenizer(friends, " ");
        while (st.hasMoreElements()) {System.out.println((String)st.nextElement());
            size++;
        }
       friendList = new String[size];
    }
    
    private void createFriendList() {
        int i = 0;
        
        StringTokenizer st = new StringTokenizer(friends, " ");
        
        while (st.hasMoreElements()) {
            friendList[i] = (String)st.nextElement();
            i++;
        }
    }
    
    public void updateFriends () {
        for (String s : friendList) {
            dlm.addElement("- " + s + "\n");
        }
        onlineFriendsList.setModel(dlm);
    }
    
    public MainGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        LOGOFF = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        onlineFriendsList = new javax.swing.JList();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Online Friends");

        LOGOFF.setText("Log off");
        LOGOFF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOGOFFActionPerformed(evt);
            }
        });

        onlineFriendsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onlineFriendsListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(onlineFriendsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(errorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                        .addComponent(LOGOFF))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(errorLabel)
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(LOGOFF)
                        .addGap(19, 19, 19))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LOGOFFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOGOFFActionPerformed
    
        try {           
            if(this.sock == null){
                System.out.println("why is this socket null?");
            } else { 
                String message = "2 " + this.myUsername; 
                pout.println(message);
                // feedback messages
                System.out.println("String sent to the server. (logging off)");
                System.out.println("Waiting for the server to respond...");
                String logoffSuccess = "";
                
                logoffSuccess = in.readLine();

                if (logoffSuccess.equals("LOGGEDOFF")) {
                    System.out.println("Message received from server: " + logoffSuccess);
                    this.sock.close();
                    System.exit(0);
                } else {
                    System.out.println("logoff failed");
                }
            }
        } catch (IOException ioe) {
            System.err.println(ioe);
        }
    }//GEN-LAST:event_LOGOFFActionPerformed

    private void onlineFriendsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onlineFriendsListMouseClicked
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = list.locationToIndex(evt.getPoint());
            System.out.println("index: "+index);
            JDialog chat = null;
            try {
                chat = new ChatDialog();
            } catch (IOException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            chat.setVisible(true);
            Thread thrd = new Thread((Runnable) chat); 
            thrd.start();

            try {
                thrd.join();                                       
            }
            catch (InterruptedException ie) {} 
        }
    }//GEN-LAST:event_onlineFriendsListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainGUI dialog = new MainGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LOGOFF;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList onlineFriendsList;
    // End of variables declaration//GEN-END:variables
}
